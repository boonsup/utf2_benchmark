name: 🔁 Zenodo DOI Auto-Sync

on:
  release:
    types: [published]  # Trigger when a new GitHub release is created

permissions:
  contents: write
  id-token: write
  actions: read
  discussions: write

jobs:
  sync-doi:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧰 Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: utf2
          environment-file: environment.yml
          auto-activate-base: false

      - name: 🔧 Install Dependencies
        shell: bash -l {0}
        run: |
          conda install -y python-dotenv requests pyyaml pandas
          pip install tomlkit

      - name: 🔍 Extract DOI from Zenodo metadata (or release tag)
        id: extract
        run: |
          DOI=$(grep -oE '"doi":\s*"[0-9]+\.[0-9]+/zenodo\.[0-9]+"' zenodo.json | head -n1 | cut -d'"' -f4 || true)
          if [ -z "$DOI" ]; then
            DOI=$(echo "${{ github.event.release.body }}" | grep -oE "10\.[0-9]+/zenodo\.[0-9]+" | head -n1 || true)
          fi
          if [ -z "$DOI" ]; then
            echo "⚠️ No DOI found in zenodo.json or release body."
            exit 1
          fi
          echo "DOI=$DOI" >> $GITHUB_ENV
          echo "✅ Found DOI: $DOI"

      - name: 🔄 Update DOI References
        shell: bash -l {0}
        run: |
          python scripts/update_doi_references.py \
            --doi "$DOI" \
            --readme README.md \
            --cff CITATION.cff \
            --zenodo zenodo.json \
            --bib tex/references.bib \
            --with-keywords true

      - name: 🖼️ Auto-Embed Latest Benchmark Figures
        shell: bash -l {0}
        run: |
          python scripts/auto_embed_figures.py
          echo "✅ Benchmark plots embedded into README.md"

      - name: 🧬 Insert DOI Badge + Snapshot (auto-detect sandbox/production)
        shell: bash -l {0}
        run: |
          echo "🧭 Determining badge color..."
          if [[ "$DOI" == 10.5072* ]]; then
            COLOR="gray"
            echo "Sandbox DOI detected → gray badge"
          else
            COLOR="blue"
            echo "Production DOI detected → blue badge"
          fi

          python scripts/auto_insert_doi_snapshot.py --color "$COLOR"
          echo "✅ DOI badge and snapshot block updated in README.md"

      - name: 🧾 Commit and Push Updated Files
        shell: bash -l {0}
        run: |
          git config user.name "utf-bot"
          git config user.email "utf-bot@users.noreply.github.com"
          git add README.md CITATION.cff zenodo.json tex/references.bib || true
          if git diff --cached --quiet; then
            echo "No changes detected — skipping commit."
          else
            if [ "${{ github.event.release.prerelease }}" == "true" ]; then
              echo "🧪 DRY-RUN MODE: pushing updates to 'zenodo-dryrun' branch."
              git checkout -B zenodo-dryrun
              git commit -m "🧪 Dry-run DOI sync → $DOI"
              git push origin zenodo-dryrun --force
            else
              echo "🚀 Production release → committing to main."
              git commit -m "🔁 Auto-sync DOI metadata → $DOI"
              git push origin main
            fi
          fi

      - name: 🧪 Verification Summary
        run: |
          echo "✅ DOI Sync complete → $DOI"
          echo "Included files:"
          ls -lh README.md CITATION.cff zenodo.json tex/references.bib
          if [ "${{ github.event.release.prerelease }}" == "true" ]; then
            echo "🧪 DRY-RUN MODE → verified updates only, not merged to main."
          fi

      # ----------------------------------------------------------
      # 🧾 Add automatic comment to the GitHub release for dry-run
      # ----------------------------------------------------------
      - name: 💬 Post DOI Dry-Run Summary Comment
        if: ${{ github.event.release.prerelease == true }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const doi = process.env.DOI || "unavailable";
            const body = `
🧪 **UTF-2.0 DOI Dry-Run Verification**

**DOI:** [${doi}](https://doi.org/${doi})
**Mode:** Sandbox
**Badge:** ![Sandbox DOI](https://img.shields.io/badge/DOI-${doi}-gray?logo=zenodo)

**Files Checked**
- README.md
- CITATION.cff
- zenodo.json
- tex/references.bib

✅ DOI references updated  
✅ Figures embedded  
✅ Snapshot inserted  
🔒 Changes stored in \`zenodo-dryrun\` branch

*(This comment was auto-generated by utf-bot as part of the prerelease validation pipeline.)*
`;
            const { owner, repo } = context.repo;
            const releaseId = context.payload.release.id;
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: releaseId,
              body
            });
            core.info("💬 Posted dry-run summary comment to release page.");

      - name: 📈 Generate and Commit Release Analytics
        shell: bash -l {0}
        run: |
          python scripts/plot_release_history.py --ci
  post-zenodo-analytics:
    name: 📈 Post-Zenodo Analytics Auto-Update
    needs: sync-doi  # or the name of your DOI sync job
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧰 Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: utf2
          environment-file: environment.yml
          auto-activate-base: false

      - name: 🔧 Install Analytics Dependencies
        shell: bash -l {0}
        run: |
          conda install -y pandas matplotlib
          pip install tomlkit

      - name: 📊 Generate and Commit Release Analytics
        shell: bash -l {0}
        run: |
          echo "🧩 Running release analytics visualizer..."
          python scripts/plot_release_history.py --ci
          echo "✅ README.md and figures/ updated successfully."

      - name: 📦 Upload Analytics Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: utfv2-release-analytics
          path: |
            figures/
            README.md
            data/release_history.csv
